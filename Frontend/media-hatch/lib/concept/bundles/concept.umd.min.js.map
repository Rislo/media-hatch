{"version":3,"sources":["ng://concept/lib/layout/basic-layout/basic-layout.component.ts","ng://concept/lib/directives/must-match.directive.ts","ng://concept/lib/concept.module.ts","ng://concept/lib/services/response-headers-retriever.ts","node_modules/tslib/tslib.es6.js","ng://concept/lib/services/http/data-list-query-helper.ts","ng://concept/lib/utils/json-to-typed-helper.ts","ng://concept/lib/services/http/http-json-to-object.service.ts","ng://concept/lib/errors/concept-error.ts","ng://concept/lib/errors/model-error.ts","ng://concept/lib/services/http/crud.service.ts","ng://concept/lib/services/log/logger.service.ts","ng://concept/lib/services/log/console-logger.service.ts","ng://concept/lib/services/log/multi-logger.service.ts","ng://concept/lib/services/notify.service.ts","ng://concept/lib/models/key-value-pair.ts","ng://concept/lib/utils/json-date-converter.ts","ng://concept/lib/utils/utils.ts","ng://concept/lib/forms/validators/must-match.ts","ng://concept/lib/forms/errors/error-message.ts","ng://concept/lib/forms/errors/angular-validator-messages.ts"],"names":["BasicLayoutComponent","prototype","ngOnInit","Component","args","selector","template","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","MustMatchDirective","getConfirmPasswordErrorMessage","required","validate","this","Directive","providers","provide","NG_VALIDATORS","useExisting","multi","Input","ConceptModule","NgModule","declarations","imports","exports","ResponseHeadersRetrieverHelper","getJsonHeaderValue","response","key","headerValue","headers","get","JSON","parse","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__decorate","decorators","target","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","done","field","DataListQueryHelper","getTableRequestParameters","tableParams","params","HttpParams","sort","append","config","sortKey","orderDesc","orderKey","toString","_b","tslib_1.__values","filters","_c","filter","getTablePaginationRequestParameters","currentPage","pageNbKey","pageSize","pageSizeKey","defaultConfig","JsonToTypedHelper","serialize","jsonConvert","serializeObject","serializeArray","values","deserialize","json","type","deserializeObject","deserializeArray","JsonConvert","undefined","ValueCheckingMode","ALLOW_NULL","HttpJsonToObjectService","route","options","http","startsUrl","pipe","catchError","handleError","getArrayBuffer","assign","responseType","getBlob","post","body","postAndReturnId","map","x","postAndReturnObject","postAndReturnJson","put","mapTo","putAndReturnObject","patch","deleteFromRoute","delete","deleteAndReturnObject","getJson","res","getJsonArray","getMergedHttpParams","getJsonArrayPagination","paginationParams","getArrayBodyWithHeaders","TablePaginationParams","httpPaginationHeader","dataListQueryHelper","pagination","collection","getJsonBodyWithHeaders","headerKeys","bodyType","_this","observe","extractBodyWithHeaders","getRawBodyWithHeaders","extractArrayBodyWithHeaders","extractHeaders","Map","headerKeys_1","headerKeys_1_1","set","result","BodyWithHeaders","ArrayBodyWithHeaders","setHttpParams","name","httpParams","isNullOrUndefined","Date","toISOString","stringify","mergedHttpParams","_e","keys","_f","_g","getAll","_h","_j","_k","_l","_m","error","ErrorEvent","logger","message","TypeError","throwError","dataListQueryHelperConfig","tslib_1.__extends","TableParams","ConceptError","ModelError","_super","CrudService","item","read","id","ReferenceError","readAll","update","idOrItem","httpClient","LoggerService","ConsoleLoggerService","trace","log","debug","info","warning","fatal","level","messageFormatted","console","warn","Injectable","providedIn","MULTI_LOGGER_SERVICES","InjectionToken","MultiLoggerService","loggerServices","Inject","Info","Warning","Error","Success","NotifyService","notify","notifyService","kind","tslib_1.__decorate","JsonProperty","KeyValuePair","JsonObject","JsonDateConverter","date","JsonConverter","isObject","isArray","getMustMatchError","matchControlName","controlErrorMessage","functions","_i","functions_1","functions_1_1","func","getRequiredError","getEmailError","email","equals","o1","o2","keySet","t1","isDefined","mergeDeep","source","output","forEach","_a"],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'concept-basic-layout',\r\n  templateUrl: './basic-layout.component.html',\r\n  styleUrls: ['./basic-layout.component.scss']\r\n})\r\nexport class BasicLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Directive, Input } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, ValidationErrors, FormGroup, AbstractControl, FormControl } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n      const control = formGroup.controls[controlName];\r\n      const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n      // return null if controls haven't initialised yet\r\n      if (!control || !matchingControl) {\r\n        return null;\r\n      }\r\n\r\n      // return null if another validator has already found an error on the matchingControl\r\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n          return null;\r\n      }\r\n\r\n      // set error on matchingControl if validation fails\r\n      if (control.value !== matchingControl.value) {\r\n          matchingControl.setErrors({ mustMatch: true });\r\n      } else {\r\n          matchingControl.setErrors(null);\r\n      }\r\n  };\r\n}\r\n\r\n@Directive({\r\n    selector: '[conceptMustMatch]',\r\n    providers: [{ provide: NG_VALIDATORS, useExisting: MustMatchDirective, multi: true }]\r\n})\r\nexport class MustMatchDirective implements Validator {\r\n    @Input('conceptMustMatch') mustMatch: string[] = [];\r\n\r\n    static getConfirmPasswordErrorMessage(control: AbstractControl) {\r\n        if (control.errors) {\r\n            if (control.errors.required) {\r\n                return 'Required';\r\n            }\r\n            else {\r\n                return 'Confirm password must match with new password';\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    validate(formGroup: FormGroup): ValidationErrors {\r\n        return MustMatch(this.mustMatch[0], this.mustMatch[1])(formGroup);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BasicLayoutComponent } from './layout/basic-layout/basic-layout.component';\r\nimport { MustMatchDirective } from './directives/must-match.directive';\r\n\r\n@NgModule({\r\n  declarations: [BasicLayoutComponent, MustMatchDirective],\r\n  imports: [],\r\n  exports: [BasicLayoutComponent, MustMatchDirective]\r\n})\r\nexport class ConceptModule {}\r\n","import { HttpResponse } from '@angular/common/http';\r\n\r\nexport class ResponseHeadersRetrieverHelper {\r\n    constructor() {}\r\n\r\n    public static getJsonHeaderValue(response: HttpResponse<object>, key: string) {\r\n        const headerValue = response.headers.get(key);\r\n        if (headerValue) {\r\n            return JSON.parse(headerValue);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { HttpParams } from '@angular/common/http';\r\nimport { TablePaginationParams, TableParams } from './http-json-to-object.service';\r\n\r\nexport interface DataListQueryHelperConfig {\r\n  pageSizeKey: string;\r\n  pageNbKey: string;\r\n  sortKey: string;\r\n  orderKey: string;\r\n}\r\n\r\nexport class DataListQueryFilter {\r\n  constructor(public field: string, public value: string) {}\r\n}\r\n\r\nexport class DataListQueryHelper {\r\n  public static defaultConfig = {\r\n    pageSizeKey: '_limit',\r\n    pageNbKey: '_page',\r\n    sortKey: '_sort',\r\n    orderKey: '_order'\r\n  };\r\n\r\n  constructor(private config: DataListQueryHelperConfig = DataListQueryHelper.defaultConfig) {}\r\n\r\n  public getTableRequestParameters(tableParams?: TableParams): HttpParams {\r\n    let params = new HttpParams();\r\n    if (tableParams) {\r\n      params = tableParams.sort ? params.append(this.config.sortKey, tableParams.sort) : params;\r\n      params = tableParams.orderDesc ? params.append(this.config.orderKey, tableParams.orderDesc.toString()) : params;\r\n      for (const filter of tableParams.filters || []) {\r\n        params = params.append(filter.field, filter.value);\r\n      }\r\n    }\r\n    return params;\r\n  }\r\n\r\n  public getTablePaginationRequestParameters(tableParams: TablePaginationParams): HttpParams {\r\n    let params = new HttpParams();\r\n    params = tableParams.sort ? params.append(this.config.sortKey, tableParams.sort) : params;\r\n    params = tableParams.orderDesc ? params.append(this.config.orderKey, tableParams.orderDesc.toString()) : params;\r\n    params = tableParams.currentPage ? params.append(this.config.pageNbKey, tableParams.currentPage.toString()) : params;\r\n    params = tableParams.pageSize ? params.append(this.config.pageSizeKey, tableParams.pageSize.toString()) : params;\r\n    for (const filter of tableParams.filters || []) {\r\n      params = params.append(filter.field, filter.value);\r\n    }\r\n    return params;\r\n  }\r\n}\r\n","import { JsonConvert, ValueCheckingMode } from 'json2typescript';\r\n\r\nexport class JsonToTypedHelper {\r\n  public static readonly jsonConvert = new JsonConvert(undefined, ValueCheckingMode.ALLOW_NULL);\r\n\r\n  public static serialize<T>(value: T): any {\r\n    return JsonToTypedHelper.jsonConvert.serializeObject<T>(value);\r\n  }\r\n\r\n  public static serializeArray<T>(values: T[]): any {\r\n    return JsonToTypedHelper.jsonConvert.serializeArray<T>(values);\r\n  }\r\n\r\n  public static deserialize<T>(json: object, type: new () => T): T {\r\n    return JsonToTypedHelper.jsonConvert.deserializeObject(json, type);\r\n  }\r\n\r\n  public static deserializeArray<T>(json: object[], type: new () => T): T[] {\r\n    return JsonToTypedHelper.jsonConvert.deserializeArray(json, type);\r\n  }\r\n}\r\n","import { HttpClient, HttpParams, HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { JsonToTypedHelper } from '../../utils/json-to-typed-helper';\r\nimport { catchError, map, mapTo } from 'rxjs/operators';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { ResponseHeadersRetrieverHelper } from '../response-headers-retriever';\r\nimport { DataListQueryHelper, DataListQueryFilter, DataListQueryHelperConfig } from './data-list-query-helper';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { LoggerService } from '../log/logger.service';\r\n\r\nexport abstract class HttpJsonToObjectService {\r\n  protected dataListQueryHelper: DataListQueryHelper;\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected logger: LoggerService,\r\n    protected startsUrl = '',\r\n    dataListQueryHelperConfig: DataListQueryHelperConfig = DataListQueryHelper.defaultConfig\r\n  ) {\r\n    this.dataListQueryHelper = new DataListQueryHelper(dataListQueryHelperConfig);\r\n  }\r\n\r\n  protected get(route: string, options?: BasicOptions) {\r\n    return this.http.get(this.startsUrl + route, options).pipe(catchError(this.handleError()));\r\n  }\r\n\r\n  protected getArrayBuffer(route: string, options?: BasicOptions): Observable<ArrayBuffer> {\r\n    return this.http\r\n      .get(this.startsUrl + route, Object.assign({}, options, { responseType: 'arraybuffer' }))\r\n      .pipe(catchError(this.handleError())) as Observable<ArrayBuffer>;\r\n  }\r\n\r\n  protected getBlob(route: string, options?: BasicOptions): Observable<Blob> {\r\n    return this.http\r\n      .get(this.startsUrl + route, Object.assign({}, options, { responseType: 'blob' }))\r\n      .pipe(catchError(this.handleError())) as Observable<Blob>;\r\n  }\r\n\r\n  protected post<T>(route: string, body: T, options?: BasicOptions) {\r\n    return this.http.post(this.startsUrl + route, body, options).pipe(catchError(this.handleError()));\r\n  }\r\n\r\n  protected postAndReturnId<TBody, TId>(route: string, body: TBody, options?: BasicOptions) {\r\n    return this.http.post(this.startsUrl + route, JsonToTypedHelper.serialize(body), options).pipe(\r\n      map(x => x as TId),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected postAndReturnObject<T>(route: string, body: T, options?: BasicOptions) {\r\n    // TODO QNS : Map avec un deserialize\r\n    return this.http.post<T>(this.startsUrl + route, JsonToTypedHelper.serialize(body), options).pipe(catchError(this.handleError()));\r\n  }\r\n\r\n  protected postAndReturnJson<T>(route: string, body: T, type: new () => T, options?: BasicOptions) {\r\n    return this.post(route, body, options).pipe(\r\n      map(r => JsonToTypedHelper.deserialize(r, type)),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected put<T>(route: string, body: T, options?: BasicOptions): Observable<void> {\r\n    return this.http.put(this.startsUrl + route, JsonToTypedHelper.serialize(body), options).pipe(\r\n      mapTo(void 0),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected putAndReturnObject<T>(route: string, body: T, options?: BasicOptions): Observable<T> {\r\n    return this.http.put(this.startsUrl + route, JsonToTypedHelper.serialize(body), options).pipe(\r\n      map(x => x as T),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected patch<T>(route: string, body: T, options?: BasicOptions) {\r\n    return this.http.patch(this.startsUrl + route, JsonToTypedHelper.serialize(body), options).pipe(catchError(this.handleError()));\r\n  }\r\n\r\n  protected deleteFromRoute(route: string, options?: BasicOptions): Observable<void> {\r\n    return this.http.delete(this.startsUrl + route, options).pipe(\r\n      mapTo(void 0),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected deleteAndReturnObject<T>(route: string, options?: BasicOptions): Observable<T> {\r\n    return this.http.delete(this.startsUrl + route, options).pipe(\r\n      map(x => x as T),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  // protected postJson<T>(\r\n  //     route: string,\r\n  //     value: T,\r\n  //     type: new () => T,\r\n  //     options?: BasicOptions\r\n  // ): Observable<T> {\r\n  //     return this.http.post<T>(this.startsUrl + route, , options)\r\n  // }\r\n\r\n  protected getJson<T>(route: string, type: new () => T, options?: BasicOptions): Observable<T> {\r\n    return this.http.get(this.startsUrl + route, options).pipe(\r\n      map(res => {\r\n        const obj = JsonToTypedHelper.deserialize(res, type);\r\n        return obj;\r\n      }),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected getJsonArray<T>(route: string, type: new () => T, options?: BasicOptions, tableParams?: TableParams): Observable<T[]> {\r\n    return this.http.get(this.startsUrl + route, { params: this.getMergedHttpParams(options, tableParams) }).pipe(\r\n      map(res => JsonToTypedHelper.deserializeArray(res as object[], type)),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected getJsonArrayPagination<T extends object>(\r\n    paginationParams: TablePaginationParams,\r\n    route: string,\r\n    type: new () => T,\r\n    options?: BasicOptions\r\n  ): Observable<PaginationCollection<T>> {\r\n    return this.getArrayBodyWithHeaders(\r\n      route,\r\n      [TablePaginationParams.httpPaginationHeader],\r\n      type,\r\n      Object.assign({ params: this.dataListQueryHelper.getTablePaginationRequestParameters(paginationParams) }, options)\r\n    ).pipe(\r\n      map(res => {\r\n        return {\r\n          pagination: res.headers.get(TablePaginationParams.httpPaginationHeader) as PaginationHeader,\r\n          collection: res.body as T[]\r\n        };\r\n      }),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a response with an extraction of the header and the body of the type T\r\n   * @param route http route\r\n   * @param headerKeys keys to extract inside the http response header\r\n   * @param bodyType type of the http response body\r\n   * @param options http options\r\n   */\r\n  protected getJsonBodyWithHeaders<T extends object>(\r\n    route: string,\r\n    headerKeys: string[],\r\n    bodyType?: new () => T,\r\n    options?: BasicOptions\r\n  ): Observable<BodyWithHeaders<T>> {\r\n    return this.http.get<HttpResponse<object>>(this.startsUrl + route, Object.assign(options ? options : {}, { observe: 'response' })).pipe(\r\n      map(res => this.extractBodyWithHeaders(res, headerKeys, bodyType)),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a response with an extraction of the header and the body raw\r\n   * @param route http route\r\n   * @param headerKeys keys to extract inside the http response header\r\n   * @param options http options\r\n   */\r\n  protected getRawBodyWithHeaders(route: string, headerKeys: string[], options?: BasicOptions): Observable<BodyWithHeaders<any>> {\r\n    return this.http.get<HttpResponse<any>>(this.startsUrl + route, Object.assign(options ? options : {}, { observe: 'response' })).pipe(\r\n      map(res => this.extractBodyWithHeaders(res, headerKeys)),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get a response with an extraction of the header and the body of the type T\r\n   * @param route http route\r\n   * @param headerKeys keys to extract inside the http response header\r\n   * @param bodyType type of the http response body\r\n   * @param options http options\r\n   */\r\n  protected getArrayBodyWithHeaders<T extends object>(\r\n    route: string,\r\n    headerKeys: string[],\r\n    bodyType: new () => T,\r\n    options?: BasicOptions\r\n  ): Observable<ArrayBodyWithHeaders<T>> {\r\n    return this.http.get<HttpResponse<object>>(this.startsUrl + route, Object.assign(options ? options : {}, { observe: 'response' })).pipe(\r\n      map(res => this.extractArrayBodyWithHeaders(res, headerKeys, bodyType)),\r\n      catchError(this.handleError())\r\n    );\r\n  }\r\n\r\n  protected extractHeaders(response: HttpResponse<any>, headerKeys: string[]): Map<string, object> {\r\n    const headers = new Map<string, object>();\r\n    for (const key of headerKeys) {\r\n      headers.set(key, ResponseHeadersRetrieverHelper.getJsonHeaderValue(response, key));\r\n    }\r\n    return headers;\r\n  }\r\n\r\n  protected extractBodyWithHeaders<T extends object>(\r\n    response: HttpResponse<any>,\r\n    headerKeys: string[],\r\n    bodyType?: new () => T\r\n  ): BodyWithHeaders<T> {\r\n    const result = new BodyWithHeaders<T>();\r\n    result.headers = this.extractHeaders(response, headerKeys);\r\n    if (bodyType) {\r\n      result.body = JsonToTypedHelper.deserialize(response.body, bodyType);\r\n    } else {\r\n      result.body = response.body;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  protected extractArrayBodyWithHeaders<T extends object>(\r\n    response: HttpResponse<any>,\r\n    headerKeys: string[],\r\n    bodyType: new () => T\r\n  ): ArrayBodyWithHeaders<T> {\r\n    const result = new ArrayBodyWithHeaders<T>();\r\n    result.headers = this.extractHeaders(response, headerKeys);\r\n    result.body = JsonToTypedHelper.deserializeArray(response.body as object[], bodyType);\r\n    return result;\r\n  }\r\n\r\n  protected setHttpParams<T = any>(name: string, value: T | T[], httpParams?: HttpParams): HttpParams {\r\n    if (isNullOrUndefined(httpParams)) {\r\n      httpParams = new HttpParams();\r\n    }\r\n    if (!isNullOrUndefined(value)) {\r\n      if (value instanceof Date) {\r\n        return httpParams.set(name, value.toISOString());\r\n      } else if (value instanceof Array) {\r\n        if (value.length > 0 && value[0] instanceof Object) {\r\n          return httpParams.set(name, JSON.stringify(JsonToTypedHelper.serializeArray<T>(value)));\r\n        } else {\r\n          return httpParams.set(name, JSON.stringify(value));\r\n        }\r\n      } else if (value instanceof Object) {\r\n        return httpParams.set(name, JSON.stringify(JsonToTypedHelper.serialize<T>(value)));\r\n      } else if (typeof value === 'string') {\r\n        return httpParams.set(name, value);\r\n      } else {\r\n        return httpParams.set(name, JSON.stringify(value));\r\n      }\r\n    }\r\n    return httpParams;\r\n  }\r\n\r\n  protected getMergedHttpParams(options?: BasicOptions, tableParams?: TableParams): HttpParams {\r\n    let mergedHttpParams = this.dataListQueryHelper.getTableRequestParameters(tableParams);\r\n    if (!isNullOrUndefined(options) && !isNullOrUndefined(options.params)) {\r\n      if (options.params instanceof HttpParams) {\r\n        for (const key of options.params.keys()) {\r\n          for (const value of options.params.getAll(key)) {\r\n            mergedHttpParams = mergedHttpParams.append(key, value);\r\n          }\r\n        }\r\n      } else {\r\n        for (const key of Object.keys(options.params)) {\r\n          if (options.params[key] instanceof Array) {\r\n            for (const value of options.params[key]) {\r\n              mergedHttpParams = mergedHttpParams.append(key, value);\r\n            }\r\n          } else {\r\n            mergedHttpParams = mergedHttpParams.append(key, options.params[key] as string);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return mergedHttpParams;\r\n  }\r\n\r\n  protected handleError() {\r\n    return (error: HttpErrorResponse) => {\r\n      if (error.error instanceof ErrorEvent) {\r\n        // A client-side or network error occurred. Handle it accordingly.\r\n        this.logger.error(`An error occurred: ${error.error.message}`);\r\n      } else if (error instanceof TypeError) {\r\n        // A type conversion occur.\r\n        this.logger.error(`Type convertion: ${error.message}`);\r\n      } else {\r\n        this.logger.error(error.message);\r\n      }\r\n      return throwError(error.name);\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * options type for get/set/delete/put/post/patch\r\n */\r\nexport interface BasicOptions {\r\n  headers?:\r\n    | HttpHeaders\r\n    | {\r\n        [header: string]: string | string[];\r\n      };\r\n  observe?: 'body';\r\n  params?:\r\n    | HttpParams\r\n    | {\r\n        [param: string]: string | string[];\r\n      };\r\n  reportProgress?: boolean;\r\n  responseType?: 'json';\r\n  withCredentials?: boolean;\r\n}\r\n\r\nexport class BodyWithHeaders<T extends object> {\r\n  headers: Map<string, object>;\r\n  body: T;\r\n}\r\n\r\nexport class ArrayBodyWithHeaders<T extends object> {\r\n  headers: Map<string, object>;\r\n  body: T[];\r\n}\r\n\r\nexport class TableParams {\r\n  sort?: string;\r\n  orderDesc?: boolean;\r\n  filters?: DataListQueryFilter[];\r\n}\r\n\r\nexport class TablePaginationParams extends TableParams {\r\n  static readonly httpPaginationHeader = 'x-pagination';\r\n\r\n  pageSize: number;\r\n  currentPage: number;\r\n}\r\n\r\nexport interface PaginationHeader {\r\n  pageSize: number;\r\n  currentPage: number;\r\n  totalCount: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginationCollection<T> {\r\n  pagination: PaginationHeader;\r\n  collection: T[];\r\n}\r\n","\r\nexport abstract class ConceptError implements Error {\r\n    name: string = 'concept error';\r\n    message: string;\r\n    stack?: string;\r\n\r\n    /**\r\n     *  ctor for a concept error\r\n     */\r\n    constructor(message?: string) {\r\n        this.message = message;\r\n    }\r\n}\r\n","import { ConceptError } from './concept-error';\r\n\r\nexport class ModelError extends ConceptError {\r\n    name: string;\r\n    message: string;\r\n    stack?: string;\r\n\r\n    /**\r\n     * ctor for a model error\r\n     */\r\n    constructor(message?: string) {\r\n        super(message);\r\n        this.name = 'model error';\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\nimport { HttpJsonToObjectService } from './http-json-to-object.service';\r\nimport { ModelError } from '../../errors/model-error';\r\nimport { Identity } from '../../models/identity';\r\nimport { DataListQueryHelper, DataListQueryHelperConfig } from './data-list-query-helper';\r\nimport { LoggerService } from '../log/logger.service';\r\n\r\n\r\nexport abstract class CrudService<TId extends string | number, T extends Identity<TId>> extends HttpJsonToObjectService {\r\n\r\n  constructor(\r\n    protected httpClient: HttpClient,\r\n    protected type: new() => T,\r\n    protected logger: LoggerService,\r\n    startsUrl: string = '',\r\n    dataListQueryHelperConfig: DataListQueryHelperConfig = DataListQueryHelper.defaultConfig\r\n  ) {\r\n    super(httpClient, logger, startsUrl, dataListQueryHelperConfig);\r\n  }\r\n\r\n  /**\r\n   * Create a new item\r\n   */\r\n  public create(item: T): Observable<T> {\r\n    if (!item) {\r\n      return throwError(new ModelError('created user group mustn\\'t be null.'));\r\n    }\r\n\r\n    return this.postAndReturnObject('', item);\r\n  }\r\n\r\n  /**\r\n   * Get one item\r\n   */\r\n  public read(id: TId): Observable<T> {\r\n    if (!id) {\r\n      return throwError(new ReferenceError('null reference user group id'));\r\n    }\r\n\r\n    return this.getJson<T>(`/${id}`, this.type);\r\n  }\r\n\r\n  /**\r\n   * Get all items\r\n   */\r\n  public readAll(): Observable<T[]> {\r\n    return this.getJsonArray<T>('', this.type);\r\n  }\r\n\r\n  /**\r\n   * Update an item\r\n   */\r\n  public update(item: T): Observable<void> {\r\n    if (!(item && item.id)) {\r\n      return throwError(new ModelError('updated user group mustn\\'t be null and must have an id.'));\r\n    }\r\n\r\n    return this.put<T>(`/${item.id}`, item);\r\n  }\r\n\r\n  /**\r\n   * Delete an item\r\n   */\r\n  public delete(idOrItem: TId | T): Observable<void> {\r\n    idOrItem = typeof idOrItem === 'object' ? idOrItem.id : idOrItem;\r\n    if (!idOrItem) {\r\n      return throwError(new ReferenceError('null reference user group id'));\r\n    }\r\n\r\n    return this.deleteFromRoute(`/${idOrItem}`);\r\n  }\r\n}\r\n","export const enum LogLevel {\r\n  Trace = 'Trace',\r\n  Debug = 'Debug',\r\n  Info = 'Info',\r\n  Warning = 'Warning',\r\n  Error = 'Error',\r\n  Fatal = 'Fatal'\r\n}\r\n\r\nexport abstract class LoggerService {\r\n  public abstract trace(message: string): void;\r\n  public abstract debug(message: string): void;\r\n  public abstract info(message: string): void;\r\n  public abstract warning(message: string): void;\r\n  public abstract error(message: string): void;\r\n  public abstract fatal(message: string): void;\r\n  public abstract log(level: LogLevel, message: string): void;\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { LoggerService, LogLevel } from './logger.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ConsoleLoggerService extends LoggerService {\r\n\r\n    public trace(message: string): void {\r\n        this.log(LogLevel.Trace, message);\r\n    }\r\n\r\n    public debug(message: string): void {\r\n        this.log(LogLevel.Debug, message);\r\n    }\r\n\r\n    public info(message: string): void {\r\n        this.log(LogLevel.Info, message);\r\n    }\r\n\r\n    public warning(message: string): void {\r\n        this.log(LogLevel.Warning, message);\r\n    }\r\n\r\n    public error(message: string): void {\r\n        this.log(LogLevel.Error, message);\r\n    }\r\n\r\n    public fatal(message: string): void {\r\n        this.log(LogLevel.Fatal, message);\r\n    }\r\n\r\n    public log(level: LogLevel, message: string) {\r\n\r\n        const messageFormatted = `[${level}] ${new Date().toISOString()}: ${message}`;\r\n\r\n        switch (level) {\r\n            case LogLevel.Trace:\r\n            case LogLevel.Debug:\r\n            case LogLevel.Info:\r\n                console.log(messageFormatted);\r\n                break;\r\n\r\n            case LogLevel.Warning:\r\n                console.warn(messageFormatted);\r\n                break;\r\n\r\n            case LogLevel.Error:\r\n            case LogLevel.Fatal:\r\n                console.error(messageFormatted);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { Injectable, InjectionToken, Inject } from '@angular/core';\r\n\r\nimport { LoggerService, LogLevel } from './logger.service';\r\n\r\nexport const MULTI_LOGGER_SERVICES = new InjectionToken<LoggerService[]>(\r\n  'multi-logger logger services'\r\n);\r\n\r\n/**\r\n * @requires MULTI_LOGGER_SERVICES\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MultiLoggerService extends LoggerService {\r\n\r\n  public constructor(@Inject(MULTI_LOGGER_SERVICES) private loggerServices: LoggerService[]) {\r\n    super();\r\n  }\r\n\r\n  public trace(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.trace(message);\r\n    }\r\n  }\r\n\r\n  public debug(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.debug(message);\r\n    }\r\n  }\r\n\r\n  public info(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.info(message);\r\n    }\r\n  }\r\n\r\n  public warning(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.warning(message);\r\n    }\r\n  }\r\n\r\n  public error(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.error(message);\r\n    }\r\n  }\r\n\r\n  public fatal(message: string): void {\r\n    for (const logger of this.loggerServices) {\r\n      logger.fatal(message);\r\n    }\r\n  }\r\n\r\n  public log(level: LogLevel, message: string) {\r\n    for (const logger of this.loggerServices) {\r\n      logger.log(level, message);\r\n    }\r\n  }\r\n}\r\n","export enum NotifyKind {\r\n  Info,\r\n  Warning,\r\n  Error,\r\n  Success\r\n}\r\n\r\nexport abstract class NotifyService {\r\n  /**\r\n   * Notify a message for the specified type if the service is defined\r\n   * @param notifyService service use for notification if defined\r\n   * @param message message\r\n   * @param kind kind of notification\r\n   */\r\n  public static notify(notifyService: NotifyService | null | undefined, message: string, kind: NotifyKind): void {\r\n    // tslint:disable-next-line:no-unused-expression\r\n    notifyService && notifyService.notify(message, kind);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  /**\r\n   * Notify a message\r\n   * @param message message to notiy\r\n   * @param kind kind of notification\r\n   */\r\n  abstract notify(message: string, kind: NotifyKind): void;\r\n}\r\n","import { JsonObject, JsonProperty } from 'json2typescript';\r\n\r\n@JsonObject()\r\nexport class KeyValuePair {\r\n  constructor(key?: any, value?: any) {\r\n    this.key = key;\r\n    this.value = value;\r\n  }\r\n\r\n  @JsonProperty('key')\r\n  public key = null;\r\n\r\n  @JsonProperty('value')\r\n  public value = null;\r\n}\r\n","import { JsonCustomConvert, JsonConverter } from 'json2typescript';\r\n\r\n@JsonConverter\r\nexport class JsonDateConverter implements JsonCustomConvert<Date> {\r\n  serialize(date: Date) {\r\n    return date.toISOString();\r\n  }\r\n  deserialize(date: any): Date {\r\n    return date ? new Date(date) : null;\r\n  }\r\n}\r\n","/* tslint:disable */\r\n/**\r\n * Determines if two objects or two values are equivalent.\r\n *\r\n * Two objects or values are considered equivalent if at least one of the following is true:\r\n *\r\n * * Both objects or values pass `===` comparison.\r\n * * Both objects or values are of the same type and all of their properties are equal by\r\n *   comparing them with `equals`.\r\n *\r\n * @param o1 Object or value to compare.\r\n * @param o2 Object or value to compare.\r\n * @returns true if arguments are equal.\r\n */\r\nexport function equals(o1: any, o2: any): boolean {\r\n  if (o1 === o2) return true;\r\n  if (o1 === null || o2 === null) return false;\r\n  if (o1 !== o1 && o2 !== o2) return true; // NaN === NaN\r\n  let t1 = typeof o1,\r\n    t2 = typeof o2,\r\n    length: number,\r\n    key: any,\r\n    keySet: any;\r\n  if (t1 == t2 && t1 == 'object') {\r\n    if (Array.isArray(o1)) {\r\n      if (!Array.isArray(o2)) return false;\r\n      if ((length = o1.length) == o2.length) {\r\n        for (key = 0; key < length; key++) {\r\n          if (!equals(o1[key], o2[key])) return false;\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      if (Array.isArray(o2)) {\r\n        return false;\r\n      }\r\n      keySet = Object.create(null);\r\n      for (key in o1) {\r\n        if (!equals(o1[key], o2[key])) {\r\n          return false;\r\n        }\r\n        keySet[key] = true;\r\n      }\r\n      for (key in o2) {\r\n        if (!(key in keySet) && typeof o2[key] !== 'undefined') {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n/* tslint:enable */\r\n\r\nexport function isDefined(value: any): boolean {\r\n  return typeof value !== 'undefined' && value !== null;\r\n}\r\n\r\nexport function isObject(item: any): boolean {\r\n  return item && typeof item === 'object' && !Array.isArray(item);\r\n}\r\n\r\nexport function mergeDeep(target: any, source: any): any {\r\n  const output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach((key: any) => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target)) {\r\n          Object.assign(output, { [key]: source[key] });\r\n        } else {\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n        }\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n}\r\n","import { FormControl, AbstractControl } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function mustMatch(matchingControl: FormControl) {\r\n    return (control: AbstractControl) => {\r\n        // return null if controls haven't initialised yet\r\n        if (!control || !matchingControl) {\r\n            return null;\r\n        }\r\n\r\n        // return null if another validator has already found an error on the matchingControl\r\n        if (control.errors && !control.errors.mustMatch) {\r\n            return null;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            control.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    };\r\n}\r\n\r\nexport function getMustMatchError(control: FormControl, controlName: string, matchControlName: string): string | null {\r\n    if (control.errors && control.errors.mustMatch) {\r\n        return `${controlName} must match with ${matchControlName}.`;\r\n    }\r\n    return null;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\n\r\nexport function controlErrorMessage(\r\n    control: AbstractControl,\r\n    ...functions: [(control: AbstractControl, ...params: any[]) => string | null, ...any[]][]) {\r\n    for (const func of functions) {\r\n        const message = func[0](control, func[1]);\r\n        if (message) {\r\n            return message;\r\n        }\r\n    }\r\n    return 'Unknown error';\r\n}\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport function getRequiredError(control: FormControl): string | null {\r\n    if (control.errors && control.errors.required) {\r\n        return `Required.`;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function getEmailError(control: FormControl): string | null {\r\n    if (control.errors && control.errors.email) {\r\n        return `No valid email.`;\r\n    }\r\n    return null;\r\n}\r\n"]}